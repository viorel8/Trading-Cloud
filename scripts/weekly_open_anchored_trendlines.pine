// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© Jo-Pippin

//@version=5
indicator("weekly Anchored only for M3-m10", overlay = true, max_bars_back = 500)

inp_text_size              = input.string("Tiny", options = ["Tiny", "Small","Normal"], title = "Text Sizs", group = "Global Settings")
TextSize                   = inp_text_size == "Tiny" ? size.tiny : inp_text_size == "Small" ? size.small : inp_text_size == "Normal" ? size.normal : na
inp_line_style             = input.string("Dotted", options = ["Dotted", "Solid", "Dashed"], title = "Line Style", group = "Global Settings")
Line_st                    = inp_line_style == "Solid" ? line.style_solid : inp_line_style == "Dotted" ? line.style_dotted : inp_line_style == "Dashed" ? line.style_dashed : na
line_thickness             = input.int(defval=1, title="Line thickness", minval=1, maxval=10, step=1, group = "Global Settings")
dot_thickness              = input.int(defval=1, title="Dot size", minval=1, maxval=10, step=1, group = "Global Settings")
open_col                   = input.color(color.new(#f74242, 0), 'Label Text Color', group = "Global Settings")
Label_text_col             = input.color(color.new(#fdfdfd, 0), 'Label Text Color', group = "Global Settings")
Label_backg_col            = input.color(color.new(#565c70, 0), 'Label Background Color', group = "Global Settings")
Ext_line_col               = input.color(color.new(#afcff7, 70), 'Extend line color', group = "Global Settings")

dot_col                    = input.color(color.new(#afcff7, 70), 'Dot color', group = "Global Settings")

show_daily_H_line          = input.bool(true, 'Show daily High Anchored Line', group = "daily Lines")
show_daily_L_line          = input.bool(true, 'Show daily Low Anchored Line',   group = "daily Lines")
show_daily_labels          = input.bool(true, 'Show daily Labels',   group = "daily Lines")
show_daily_dots            = input.bool(true, 'Show daily dots',   group = "daily Lines")
daily_HL_line_color        = input.color(color.new(#afcff7, 0), 'daily HL anchored line color',   group = "daily Lines")

show_weekly_H_line         = input.bool(true, 'Show weekly High Anchored Line', group = "weekly Lines")
show_weekly_L_line         = input.bool(true, 'Show weekly Low Anchored Line',  group = "weekly Lines")
show_weekly_labels         = input.bool(true, 'Show weekly Labels',  group = "weekly Lines")
show_weekly_dots           = input.bool(true, 'Show weekly dots',   group = "daily Lines")
weekly_HL_line_color       = input.color(color.new(#afcff7, 0), 'weekly HL anchored line color', group = "weekly Lines")

//daily Elements
[open_d]                   = request.security(syminfo.tickerid,"D" , [open], lookahead= barmerge.lookahead_off)
daily_open_bar             = ta.barssince(ta.change(time("D")))
daily_high_bar             = ta.barssince(ta.pivothigh(daily_open_bar,0))
daily_low_bar              = ta.barssince(ta.pivotlow(daily_open_bar,0))

//weekly Elements
[open_w]                   = request.security(syminfo.tickerid,"W" , [open], lookahead= barmerge.lookahead_off)
weekly_open_bar            = ta.barssince(ta.change(time("W")))
weekly_high_bar            = ta.barssince(ta.pivothigh(weekly_open_bar,0))
weekly_low_bar             = ta.barssince(ta.pivotlow(weekly_open_bar,0))

show_m15_m20_m30 = timeframe.period == "3" or timeframe.period == "4" or timeframe.period == "5" or timeframe.period == "6" or timeframe.period == "7" or timeframe.period == "8" or timeframe.period == "9" or timeframe.period == "10"? true :false

//Weekly Elements re
//Weekly lowest
lowest_w = low
for i = 1 to weekly_open_bar+1
	if (low[i]<lowest_w)
    	lowest_w := low[i]

//Weekly highest
highest_w = high
for i = 1 to weekly_open_bar+1
	if (high[i]>highest_w)
    	highest_w := high[i]        

low_w  = lowest_w
high_w = highest_w

//daily Elements re
//daily lowest
lowest_d = low
for i = 1 to daily_open_bar+1
	if (low[i]<lowest_d)
    	lowest_d := low[i]

//daily highest
highest_d = high
for i = 1 to daily_open_bar+1
	if (high[i]>highest_d)
    	highest_d := high[i]        

low_d  = lowest_d
high_d = highest_d

//weekly Elements
weekly_open_label = show_weekly_labels and show_m15_m20_m30 ? label.new(bar_index[weekly_open_bar], open_w, color=open_col , style=label.style_label_down,size=TextSize,text="wo",textcolor=Label_text_col ):na
label.delete(weekly_open_label[1])

weekly_open_to_weekly_high_anchored_line_extend = show_weekly_H_line and show_m15_m20_m30 ? line.new(bar_index[weekly_open_bar],open_w, bar_index[weekly_high_bar], high_w, extend=extend.right, color=Ext_line_col, style=Line_st, width=line_thickness):na
line.delete(weekly_open_to_weekly_high_anchored_line_extend[1])
weekly_open_to_weekly_low_anchored_line_extend  = show_weekly_L_line and show_m15_m20_m30 ? line.new(bar_index[weekly_open_bar],open_w, bar_index[weekly_low_bar],  low_w, extend=extend.right, color=Ext_line_col, style=Line_st, width=line_thickness):na
line.delete(weekly_open_to_weekly_low_anchored_line_extend[1])

weekly_high_low  = show_weekly_dots and show_m15_m20_m30 ? line.new(bar_index[weekly_high_bar],high_w-4, bar_index[weekly_high_bar],  high_w+4, extend=extend.none, color=dot_col, style=line.style_solid, width=dot_thickness):na
line.delete(weekly_high_low[1])
weekly_dot_low  = show_weekly_dots and show_m15_m20_m30 ? line.new(bar_index[weekly_low_bar],low_w-4, bar_index[weekly_low_bar],  low_w+4, extend=extend.none, color=dot_col, style=line.style_solid, width=dot_thickness):na
line.delete(weekly_dot_low[1])


// plot(high == high[weekly_high_bar] and show_weekly_dots ? high :na, style=plot.style_circles, linewidth=dot_thickness, color= bar_index == bar_index[weekly_high_bar] ? dot_col : na, offset=0,show_last=30 )
// plot(low == low[weekly_low_bar] and show_weekly_dots ? low :na, style=plot.style_circles, linewidth=dot_thickness, color= bar_index == bar_index[weekly_low_bar] ? dot_col : na, offset=0,show_last=30 )



weekly_high_label = show_weekly_labels and show_m15_m20_m30 ? label.new(bar_index[weekly_high_bar], high_w, color=Label_backg_col, style=label.style_label_down,size=TextSize,text="wh",textcolor=Label_text_col ):na
label.delete(weekly_high_label[1])
weekly_low_label = show_weekly_labels and show_m15_m20_m30 ? label.new(bar_index[weekly_low_bar], low_w, color=Label_backg_col, style=label.style_label_up,size=TextSize,text="wl",textcolor=Label_text_col ):na
label.delete(weekly_low_label[1])

//daily Elements
weekly_open_to_daily_high_anchored_line_extend = show_daily_H_line and show_m15_m20_m30 ? line.new(bar_index[weekly_open_bar],open_w, bar_index[daily_high_bar], high_d, extend=extend.right, color=Ext_line_col, style=Line_st, width=line_thickness):na
line.delete(weekly_open_to_daily_high_anchored_line_extend[1])
weekly_open_to_daily_low_anchored_line_extend  = show_daily_L_line and show_m15_m20_m30 ? line.new(bar_index[weekly_open_bar],open_w, bar_index[daily_low_bar],  low_d, extend=extend.right, color=Ext_line_col, style=Line_st, width=line_thickness):na
line.delete(weekly_open_to_daily_low_anchored_line_extend[1])

daily_high_label = show_daily_labels and show_m15_m20_m30 ? label.new(bar_index[daily_high_bar], high_d, color=Label_backg_col, style=label.style_label_down,size=TextSize,text="dh",textcolor=Label_text_col ):na
label.delete(daily_high_label[1])
daily_low_label = show_daily_labels and show_m15_m20_m30 ? label.new(bar_index[daily_low_bar], low_d, color=Label_backg_col, style=label.style_label_up,size=TextSize,text="dl",textcolor=Label_text_col ):na
label.delete(daily_low_label[1])

daily_high_low  = show_weekly_dots and show_m15_m20_m30 ? line.new(bar_index[daily_high_bar],high_d-4, bar_index[daily_high_bar],  high_d+4, extend=extend.none, color=dot_col, style=line.style_solid, width=dot_thickness):na
line.delete(daily_high_low[1])
daily_dot_low  = show_weekly_dots and show_m15_m20_m30 ? line.new(bar_index[daily_low_bar],low_d-4, bar_index[daily_low_bar],  low_d+4, extend=extend.none, color=dot_col, style=line.style_solid, width=dot_thickness):na
line.delete(daily_dot_low[1])