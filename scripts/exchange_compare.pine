//jo  - I who is Jo declare that I copied some code from the TradingView open source library. Thanks to those! 

//@version=5
indicator('Stablecoins', shorttitle='Stablecoins', overlay=true)

t1                   = input.symbol(title="Ticker",  defval = "USDT.D+DAI.D+USDC.D")
t                    = input.time (0,"Anchor",   confirm  = true,   inline = "21", group ="Inputs")

inp_text_size        = input.string("Tiny", options = ["Tiny", "Small","Normal"], title = "Text Sizs", group = "Settings")
TextSize             = inp_text_size == "Tiny" ? size.tiny : inp_text_size == "Small" ? size.small : inp_text_size == "Normal" ? size.normal : na

i_show_OI_line       = input.bool(false,   title='Show Line',      group = "Settings")
i_show_OI_           = input.bool(true,    title='Show Candles',      group = "Settings")

i_xw                 = input.float(3.1,    minval=0.1, maxval=20, step=0.1,  title='Intensity', group = "Settings")
i_xo                 = input.float(2,      title='Shift Up Down', group = "Settings")

_txc                 = input.color(color.new(#404867, 0)   ,'Text Color', group = "Color")
c01                  = input.color(color.new(#080808, 70),  title = 'Line Color ', group = "Color")

body_                = input.color(color.new(#080808, 100),   title = 'Candle body Color', group = "Color")
border_              = input.color(color.new(#1b255e, 1),   title = 'Candle border Color', group = "Color")
wick_                = input.color(color.new(#1b255e, 70),   title = 'Candle wick Color' , group = "Color")

only_symbol(s)       => 
    array.get(str.split(s, ":"), 1)

[hkopen,hkhigh,hklow,pnl01] = request.security(t1, timeframe.period, [open / open[1] - 1,high / high[1] - 1,low / low[1] - 1,close / close[1] - 1])

float pnl_cum01   = na
float pnl_cum02   = na
float pnl_cum03   = na
float pnl_cum04   = na
float first_close = na  

first_close := time == t ? close-(i_xo*100) : nz(first_close[1])
pnl_cum_cur = close / first_close - 1
pnl_cum01 := time == t ? 0 : time >  t ? (1 + pnl_cum01[1]) * (1 + pnl01) - 1 : pnl_cum01
pnl_cum02 := time == t ? 0 : time >  t ? (1 + pnl_cum02[1]) * (1 + hkopen) - 1 : pnl_cum02
pnl_cum03 := time == t ? 0 : time >  t ? (1 + pnl_cum03[1]) * (1 + hkhigh) - 1 : pnl_cum03
pnl_cum04 := time == t ? 0 : time >  t ? (1 + pnl_cum04[1]) * (1 + hklow) - 1 : pnl_cum04


plotcandle(i_show_OI_ ? (first_close * ((pnl_cum02/i_xw  ) + 1)):na,(first_close * ((pnl_cum03/i_xw  ) + 1)),(first_close * ((pnl_cum04/i_xw  ) + 1)),(first_close * ((pnl_cum01/i_xw  ) + 1)),title='PlotCandle',color=body_ ,wickcolor=wick_ ,bordercolor=border_ )
plot(i_show_OI_line ? (first_close * ((pnl_cum01/i_xw  ) + 1)):na, title = 'OI', color = c01 ,style=plot.style_stepline,linewidth=1)

oi                      = i_show_OI_ ? label.new(bar_index, (first_close * ((pnl_cum01/i_xw  ) + 1)), text=str.tostring(t1),style = label.style_label_left, textcolor=_txc, size=TextSize, color= color.new(color.green,100)):na
label.delete(oi[1])