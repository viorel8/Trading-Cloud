//Jo-Pippin 
//@version=5
indicator(title='Max Vol', shorttitle='Max Vol', overlay=true , max_bars_back = 500)

inp_tf                 = input.string("Week", options = ["Day","Week", "Month", "Year"], title = "Max vol lookback", group = "Volume")
tf_sel                 = inp_tf == "Day" ? "D" : inp_tf == "Week" ? "W" : inp_tf == "Month" ? "M" : inp_tf == "Year" ? "12M" : na


inp_line_style_poc     = input.string("Solid", options = ["Dotted", "Solid", "Dashed"], title = "Poc Line Style", group = "Volume")
Line_st_poc            = inp_line_style_poc == "Solid" ? line.style_solid : inp_line_style_poc == "Dotted" ? line.style_dotted : inp_line_style_poc == "Dashed" ? line.style_dashed : na

show_mpoc              = input.bool(true, 'Show LTF POC of Max volume bar', group = "Volume")
show_vol_candle        = input.bool(true, 'Show Max Vol candle measured from the start of this week', group = "Volume")

wick_width             = input.int (1,    'Volume Wick width on existing candles',     minval=1, maxval=30, group = "Volume")
body_width             = input.int (3,    'Volume Body width on existing candles',     minval=1, maxval=30, group = "Volume")
_shift                 = input.int (3,    'Extend Poc Line',     minval=1, maxval=30, group = "Volume")



daily_above_hide      = input.int(20,    minval=1, maxval=100, step=1,     title='Hide daily dots above timeframe', group = "TF Hide")
weekly_above_hide     = input.int(20,    minval=1, maxval=100, step=1,     title='Hide weekly dots above timeframe',       group = "TF Hide")
monthly_above_hide    = input.int(20,    minval=1, maxval=100000, step=1,  title='Hide monthly dots above timeframe',        group = "TF Hide")

vol_candle_color       = input.color(color.new(#edf1ee, 0),  'Volume Candle Color', group = "Color")
dot_d_c              = input.color(color.new(#f2f3f8, 0),  title = 'Weekly Dot Color' , group = "Color")
dot_w_c              = input.color(color.new(#f2f3f8, 0),  title = 'Weekly Dot Color' , group = "Color")
dot_m_c              = input.color(color.new(#0c54f0, 0),  title = 'Monthly Dot Color' , group = "Color")

Show_daily           = input.bool(true,  title='Show D Open Dots',        group = "Settings")
Show_weekly          = input.bool(true,  title='Show W Open Dots',        group = "Settings")
Show_monthly         = input.bool(true,  title='Show M Open Dots',        group = "Settings")

[dop,dc,dl,dh,dc1]    = request.security(syminfo.tickerid, 'W', expression  = [open, close[1],low,high,close], lookahead=barmerge.lookahead_on)
[wo,wc,wl,wh,wc1]     = request.security(syminfo.tickerid, 'W', expression  = [open, close[1],low,high,close], lookahead=barmerge.lookahead_on)
[mo,mc,ml,mh,mc1]     = request.security(syminfo.tickerid, 'M', expression  = [open, close[1],low,high,close], lookahead=barmerge.lookahead_on)

new_day         = dc1[1]  != dc1
new_week        = wc1[1]   != wc1
new_month       = mc1[1]  != mc1

plotchar(new_week  and Show_daily and timeframe.multiplier <= daily_above_hide  ? dop : na, title='Close', char='•', location=location.absolute, color=dot_d_c, offset=0, size=size.tiny)
plotchar(new_week  and Show_weekly and timeframe.multiplier <= weekly_above_hide  ? wo : na, title='Close', char='•', location=location.absolute, color=dot_w_c, offset=0, size=size.tiny)
plotchar(new_month and Show_monthly and timeframe.multiplier <= monthly_above_hide ? mo : na, title='Close', char='•', location=location.absolute, color=dot_m_c, offset=0, size=size.tiny)








week_bars_back = ta.barssince(ta.change(time(tf_sel)))

//Vol input
arr = array.new_float(0)
for i = 1 to week_bars_back by 1

	array.push(arr,volume[i])

first_Highest = array.max(arr, 0)
first_Highest_index = array.lastindexof(arr, first_Highest)

//ltf Poc
currentTimeframe = timeframe.in_seconds(timeframe.period) / 60

dynTf = currentTimeframe <= 30 ? "1" : currentTimeframe > 30 and currentTimeframe <= 180 ? "5" :
 currentTimeframe > 180  and currentTimeframe <= 480  ? "15" : currentTimeframe  > 480 and currentTimeframe <= 1440 ? "60" :
 currentTimeframe > 1440 and currentTimeframe <= 4320 ? "120" : currentTimeframe > 4320 ? "240" : na

ltfStats() =>

    vol = na(volume) == false ? volume : 0

    [close, vol]

[ltfSrc, ltfVolume]
 = request.security_lower_tf(syminfo.tickerid, dynTf, ltfStats())

maxVolume = array.max(ltfVolume,0)
indexOfMaxVolume = array.indexof(ltfVolume, maxVolume)
maxVol = array.size(ltfSrc) > 0 ? array.get(ltfSrc, indexOfMaxVolume) : na

//Vol Candle
candle_body = show_vol_candle ? line.new(bar_index[first_Highest_index+1], open[first_Highest_index+1], bar_index[first_Highest_index+1], close[first_Highest_index+1], color=vol_candle_color, width=body_width):na
line.delete(candle_body[1])
candle_wick = show_vol_candle ? line.new(bar_index[first_Highest_index+1], high[first_Highest_index+1], bar_index[first_Highest_index+1], low[first_Highest_index+1], color=vol_candle_color, width=wick_width):na
line.delete(candle_wick[1])

//Ltf poc
ltf_poc = show_mpoc        ? line.new(bar_index[first_Highest_index+1], maxVol[first_Highest_index+1], bar_index[first_Highest_index+1]+_shift, maxVol[first_Highest_index+1], color=vol_candle_color , width=1,style = Line_st_poc):na
line.delete(ltf_poc[1])

//Alerts
alertcondition(first_Highest_index == 0, title='Max M5 Vol has shifted to curent Bar', message='Max M5 Vol has shifted to curent Bar')