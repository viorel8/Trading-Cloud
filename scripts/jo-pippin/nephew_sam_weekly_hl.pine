// @version=5
indicator('HL of the week (Nephew_Sam_)', overlay=true, max_bars_back=1000, max_lines_count=500, max_boxes_count=500, max_labels_count=500)

// _year = input.int(title="Year", defval=2022)
_daysinpair = input.int(title="Total open days in this pair", defval=7, options=[5, 7])
_offset = input.int(title="Offset (make 1 = Monday)", defval=1, minval=0, maxval=7)
showDays = input.bool(true, title='Show Days (debug)')


var h_monday = 0
var h_tuesday = 0
var h_wednesday = 0
var h_thursday = 0
var h_friday = 0
var h_saturday = 0
var h_sunday = 0

var l_monday = 0
var l_tuesday = 0
var l_wednesday = 0
var l_thursday = 0
var l_friday = 0
var l_saturday = 0
var l_sunday = 0



// if year == _year
// GET HIGH AND LOW OF WEEK
_dayofweek = dayofweek[_offset] 
if timeframe.isdaily
    if showDays
        label.new(bar_index, low, str.tostring(_dayofweek), yloc=yloc.belowbar, style=label.style_label_up, color=color.rgb(255, 153, 0, 100), size =  size.tiny,textcolor=color.rgb(255, 153, 0, 100))

    if _dayofweek == _daysinpair
        _high = -999999999999.0
        _highday = -1
        _low = 999999999999.0
        _lowday = -1

        for i = _daysinpair-1 to 0
            // label.new(bar_index[i], high[i], str.tostring(_high))
            if high[i] > _high
                _high := high[i]
                _highday := _dayofweek[i]
            if low[i] < _low
                _low := low[i]
                _lowday := _dayofweek[i]

            if showDays
                label.new(bar_index, high, "Hday: " + str.tostring(_highday) + "\n" + "Lday: " + str.tostring(_lowday), color=color.yellow, size =  size.tiny)
                box.new(bar_index-6,_high,bar_index,_low,bgcolor = color.new(color.blue,0),border_color=color.new(color.white,100))
                
        

        // UPDATE HIGH/LOW VARIABLES
        if _highday == 1
            h_monday := h_monday + 1
        else if _highday == 2
            h_tuesday := h_tuesday + 1
        else if _highday == 3
            h_wednesday := h_wednesday + 1
        else if _highday == 4
            h_thursday := h_thursday + 1
        else if _highday == 5
            h_friday := h_friday + 1
        else if _highday == 6
            h_saturday := h_saturday + 1
        else if _highday == 7
            h_sunday := h_sunday + 1
            
        if _lowday == 1
            l_monday := l_monday + 1
        else if _lowday == 2
            l_tuesday := l_tuesday + 1
        else if _lowday == 3
            l_wednesday := l_wednesday + 1
        else if _lowday == 4
            l_thursday := l_thursday + 1
        else if _lowday == 5
            l_friday := l_friday + 1
        else if _lowday == 6
            l_saturday := l_saturday + 1
        else if _lowday == 7
            l_sunday := l_sunday + 1

_total = h_monday + l_monday + h_tuesday + l_tuesday + h_wednesday + l_wednesday + h_thursday + l_thursday + h_friday + l_friday + h_saturday + l_saturday + h_sunday + l_sunday
getPercent(_n) => str.tostring(int((_n / _total) * 100 ))

if barstate.islast and timeframe.isdaily
    _table = table.new("top_right", 5, 8, frame_width = 2, frame_color = color.black, border_color = color.black, border_width = 1)
    table.cell(_table, 0, 0, text="Day", bgcolor=color.yellow,text_size=size.small)
    table.cell(_table, 1, 0, text="High of the Week", bgcolor=color.white,text_size=size.small)
    table.cell(_table, 2, 0, text="Low of the Week", bgcolor=color.white,text_size=size.small)
    table.cell(_table, 3, 0, text="Total", bgcolor=color.lime,text_size=size.small)
    table.cell(_table, 4, 0, text="%", bgcolor=color.lime,text_size=size.small)
    
    table.cell(_table, 0, 1, text="Monday", bgcolor=color.yellow,text_size=size.small)
    table.cell(_table, 1, 1, text=str.tostring(h_monday), bgcolor=color.white,text_size=size.small)
    table.cell(_table, 2, 1, text=str.tostring(l_monday), bgcolor=color.white,text_size=size.small)
    table.cell(_table, 3, 1, text=str.tostring(h_monday + l_monday), bgcolor=color.lime,text_size=size.small)
    table.cell(_table, 4, 1, text=getPercent(h_monday + l_monday), bgcolor=color.lime,text_size=size.small)
    
    table.cell(_table, 0, 2, text="Tuesday", bgcolor=color.yellow,text_size=size.small)
    table.cell(_table, 1, 2, text=str.tostring(h_tuesday), bgcolor=color.white,text_size=size.small)
    table.cell(_table, 2, 2, text=str.tostring(l_tuesday), bgcolor=color.white,text_size=size.small)
    table.cell(_table, 3, 2, text=str.tostring(h_tuesday + l_tuesday), bgcolor=color.lime,text_size=size.small)
    table.cell(_table, 4, 2, text=getPercent(h_tuesday + l_tuesday), bgcolor=color.lime,text_size=size.small)
    
    table.cell(_table, 0, 3, text="Wednesday", bgcolor=color.yellow,text_size=size.small)
    table.cell(_table, 1, 3, text=str.tostring(h_wednesday), bgcolor=color.white,text_size=size.small)
    table.cell(_table, 2, 3, text=str.tostring(l_wednesday), bgcolor=color.white,text_size=size.small)
    table.cell(_table, 3, 3, text=str.tostring(h_wednesday + l_wednesday), bgcolor=color.lime,text_size=size.small)
    table.cell(_table, 4, 3, text=getPercent(h_wednesday + l_wednesday), bgcolor=color.lime,text_size=size.small)
    
    table.cell(_table, 0, 4, text="Thursday", bgcolor=color.yellow,text_size=size.small)
    table.cell(_table, 1, 4, text=str.tostring(h_thursday), bgcolor=color.white,text_size=size.small)
    table.cell(_table, 2, 4, text=str.tostring(l_thursday), bgcolor=color.white,text_size=size.small)
    table.cell(_table, 3, 4, text=str.tostring(h_thursday + l_thursday), bgcolor=color.lime,text_size=size.small)
    table.cell(_table, 4, 4, text=getPercent(h_thursday + l_thursday), bgcolor=color.lime,text_size=size.small)
    
    table.cell(_table, 0, 5, text="Friday", bgcolor=color.yellow,text_size=size.small)
    table.cell(_table, 1, 5, text=str.tostring(h_friday), bgcolor=color.white,text_size=size.small)
    table.cell(_table, 2, 5, text=str.tostring(l_friday), bgcolor=color.white,text_size=size.small)
    table.cell(_table, 3, 5, text=str.tostring(h_friday + l_friday), bgcolor=color.lime,text_size=size.small)
    table.cell(_table, 4, 5, text=getPercent(h_friday + l_friday), bgcolor=color.lime,text_size=size.small)
    
    table.cell(_table, 0, 6, text="Saturday", bgcolor=color.yellow,text_size=size.small)
    table.cell(_table, 1, 6, text=str.tostring(h_saturday), bgcolor=color.white,text_size=size.small)
    table.cell(_table, 2, 6, text=str.tostring(l_saturday), bgcolor=color.white,text_size=size.small)
    table.cell(_table, 3, 6, text=str.tostring(h_saturday + l_saturday), bgcolor=color.lime,text_size=size.small)
    table.cell(_table, 4, 6, text=getPercent(h_saturday + l_saturday), bgcolor=color.lime,text_size=size.small)
    
    table.cell(_table, 0, 7, text="Sunday", bgcolor=color.yellow,text_size=size.small)
    table.cell(_table, 1, 7, text=str.tostring(h_sunday), bgcolor=color.white,text_size=size.small)
    table.cell(_table, 2, 7, text=str.tostring(l_sunday), bgcolor=color.white,text_size=size.small)
    table.cell(_table, 3, 7, text=str.tostring(h_sunday + l_sunday), bgcolor=color.lime,text_size=size.small)
    table.cell(_table, 4, 7, text=getPercent(h_sunday + l_sunday), bgcolor=color.lime,text_size=size.small)

if barstate.islast and not timeframe.isdaily
    label.new(bar_index, high, "PLEASE USE DAILY TIMEFRAME")