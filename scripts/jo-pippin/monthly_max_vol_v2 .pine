//Jo
//@version=5
indicator('Monthly Framing', overlay=true, max_bars_back = 5000)


inp_text_size          = input.string("Tiny", options = ["Tiny", "Small","Normal"], title = "Text Sizs", group = "String inputs")
TextSize               = inp_text_size == "Tiny" ? size.tiny : inp_text_size == "Small" ? size.small : inp_text_size == "Normal" ? size.normal : na

inp_line_style_poc     = input.string("Dashed", options = ["Dotted", "Solid", "Dashed"], title = "Poc Line Style", group = "String inputs")
Line_st_poc            = inp_line_style_poc == "Solid" ? line.style_solid : inp_line_style_poc == "Dotted" ? line.style_dotted : inp_line_style_poc == "Dashed" ? line.style_dashed : na

ltf_poc_s            = input.string("BINANCE:BTCUSDTPERP", options = ["COINBASE:BTCUSD","BYBIT:BTCUSDT","BYBIT:BTCUSD", "BINANCE:BTCUSDT","BINANCE:BTCUSDTPERP", "CURRENT TICKER"], title = "Volume Source", group = "String inputs")
show_labels            = input.bool(true, 'Show Poc price labels', group = "Bool inputs")
show_vol_mark          = input.bool(true, 'Show vol Markers', group = "Bool inputs")
Alert_zone_spacing     = input.int (50,   'Poc Zones width',  minval=1, maxval=530, group = "Integer inputs")
day_label_col          = input.color(color.new(#050505, 0), 'Day Label Color', group = "Color Settings")
alert_line_col         = input.color(color.new(#eceff1, 100) ,'Poc zone outline color', group = "Color Settings")
alert_zone_bg          = input.color(color.new(#404867, 95) ,'Poc zone BG color', group = "Color Settings")

ltf_poc              = ltf_poc_s  == "BINANCE:BTCUSDTPERP" ? "BINANCE:BTCUSDTPERP" : ltf_poc_s  == "BYBIT:BTCUSDT" ? "BYBIT:BTCUSDT" : ltf_poc_s  == "COINBASE:BTCUSD" ? "COINBASE:BTCUSD" : ltf_poc_s  == "BYBIT:BTCUSD" ? "BYBIT:BTCUSD": ltf_poc_s  == "BINANCE:BTCUSDT" ? "BINANCE:BTCUSDT" : ltf_poc_s  == "CURRENT TICKER" ? syminfo.tickerid : na

[volume_s]             = request.security(ltf_poc, timeframe.period, expression=[volume])
month_bars_back = ta.barssince(ta.change(time("M")))

//HTF Vol Candle Search
arr = array.new_float(0)
for i = 1 to month_bars_back by 1

	array.push(arr,volume_s[i])

first_Highest = array.max(arr, 0)
first_Highest_index = array.lastindexof(arr, first_Highest)

//ltf Poc
currentTimeframe = timeframe.in_seconds(timeframe.period) / 60
dynTf = currentTimeframe <= 30 ? "1" : currentTimeframe > 30 and currentTimeframe <= 180 ? "5" :
 currentTimeframe > 180  and currentTimeframe <= 480  ? "15" : currentTimeframe  > 480 and currentTimeframe <= 1440 ? "60" :
 currentTimeframe > 1440 and currentTimeframe <= 4320 ? "120" : currentTimeframe > 4320 ? "240" : na

ltfStats() =>

    vol = na(volume) == false ? volume : 0

    [close, vol]

[ltfSrc, ltfVolume]
 = request.security_lower_tf(ltf_poc, dynTf, ltfStats())

maxVolume = array.max(ltfVolume,0)
indexOfMaxVolume = array.indexof(ltfVolume, maxVolume)
maxVol = array.size(ltfSrc) > 0 ? array.get(ltfSrc, indexOfMaxVolume) : na


day_01 = dayofweek[first_Highest_index+1] == 1 ?  "SUNDAY" : dayofweek[first_Highest_index+1] == 2 ?  "MONDAY" : dayofweek[first_Highest_index+1] == 3 ?  "TUESDAY" : dayofweek[first_Highest_index+1] == 4 ?  "WEDNESDAY" : dayofweek[first_Highest_index+1] == 5 ?  "THURSDAY" : dayofweek[first_Highest_index+1] == 6 ?  "FRIDAY" : dayofweek[first_Highest_index+1] == 7 ?  "SATERDAY" :na 
poc_price_text      =  show_labels ? "MONTHLY MAX VOL POC  |  " + str.tostring(day_01) +  "  |  " + str.tostring(ltf_poc_s) + "  |  " + str.tostring(timeframe.period) + "M   |   $" + str.tostring(maxVol[first_Highest_index+1]) + "   ": ''

poc_z_box  = box.new(bar_index[first_Highest_index+1], maxVol[first_Highest_index+1]+Alert_zone_spacing, bar_index, maxVol[first_Highest_index+1]-Alert_zone_spacing, border_color=alert_line_col, border_width=1, border_style=Line_st_poc,bgcolor=alert_zone_bg, text=poc_price_text, text_size=TextSize, text_color=day_label_col, text_halign=text.align_right, text_valign=text.align_center)
box.delete(poc_z_box[1]) 

//Vol Candle Marker 01
vol_candle_marker = show_vol_mark  ? label.new(bar_index[first_Highest_index+1], high[first_Highest_index+1]+20, text='▼', color=color.new(color.black,100), style=label.style_label_down, textcolor=day_label_col, size=size.tiny):na
label.delete(vol_candle_marker[1])

//Vol Candle Marker 01
vol_candle_marker2 = show_vol_mark  ? label.new(bar_index[first_Highest_index+1], low[first_Highest_index+1]-20, text='▲', color=color.new(color.black,100), style=label.style_label_up, textcolor=day_label_col, size=size.tiny):na
label.delete(vol_candle_marker2[1])