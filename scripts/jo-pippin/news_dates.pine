//@version=5
// US Federal Reserve's FOMC Meeting Minutes and watch their effect on the Price Action

// Sources //
// FOMC meeting minutes 
// Source https://www.investing.com/economic-calendar/fomc-meeting-minutes-108

// FOMC Press Conference
// Source https://www.investing.com/economic-calendar/fomc-press-conference-1692

// U.S. Core Consumer Price Index (CPI) YoY 
// Source https://www.investing.com/economic-calendar/core-cpi-736
// Source https://fred.stlouisfed.org/series/CPILFESL

indicator('FOMC & CPI Dates', overlay=true)

// Settings
ler             = input.int(defval=1400, title='Extend Up', group = "Settings")
tx_c            = input.color(color.new(#faf8f8, 20), title = "Text Color", group="Settings")
LB_c            = input.color(color.new(#faf8f8, 100), title = "Label Color", group="Settings")
textSizeI       = input.string('Tiny', 'Text Size', ['Small', 'Tiny', 'Normal'], group = "Settings")
textSize        = textSizeI =='Small'? size.small : textSizeI =='Tiny'? size.tiny : size.normal 

show_fomc_announcement = input.bool(defval = true, title = "ðŸ“… FOMC Press Conference", inline = "FOMC Press Conference", group="Settings")
color_fomc_announcement = input.color(color.new(color.blue, 80), title = "Color", inline="FOMC Press Conference", group="Settings")

show_fomc_minutes = input.bool(defval = true, title = "ðŸ“… FOMC Meeting Minutes", inline = "FOMC Meeting Minutes", group="Settings")
color_fomc_minutes = input.color(color.new(color.lime, 80), title = "Color", inline="FOMC Meeting Minutes", group="Settings")

show_cpi = input.bool(defval = true, title = "ðŸ“… Consumer Price Index (CPI)", inline = "CPI", group="Settings")
color_cpi = input.color(color.new(color.yellow, 80), title = "Color", inline="CPI", group="Settings")

// FOMC Minutes Dates
var fomc_minutes_date = 0
var int[] fomc_minutes_dates = 
  array.from(
   timestamp("6 Jan 2021 15:00:00 EST"),
   timestamp("17 Feb 2021 15:00:00 EST"),
   timestamp("7 Apr 2021 14:00:00 EST"),
   timestamp("19 May 2021 14:00:00 EST"),
   timestamp("7 Jul 2021 14:00:00 EST"),
   timestamp("18 Aug 2021 14:00:00 EST"),
   timestamp("13 Oct 2021 14:00:00 EST"),
   timestamp("24 Nov 2021 15:00:00 EST"),
   timestamp("5 Jan 2022 15:00:00 EST"),
   timestamp("16 Feb 2022 14:00:00 EST"),
   timestamp("6 April 2022 14:00:00 EDT"), 
   timestamp("25 May 2022 14:00:00 EDT"), 
   timestamp("6 July 2022 14:00:00 EDT"),
   timestamp("17 Aug 2022 14:00:00 EDT"),
   timestamp("12 Oct 2022 14:00:00 EDT"),
   timestamp("23 Nov 2022 14:00:00 EST"),
   timestamp("4 Jan 2023 14:00:00 EST"),
   timestamp("22 Feb 2023 14:00:00 EST"),
   timestamp("12 April 2023 14:00:00 EDT"),
   timestamp("24 May 2023 14:00:00 EDT"),
   timestamp("5 July 2023 14:00:00 EDT"),
   timestamp("16 Aug 2023 14:00:00 EDT"),
   timestamp("11 Oct 2023 14:00:00 EDT"),
   timestamp("22 Nov 2023 14:00:00 EST")
   )

// CPI Dates
var cpi_date = 0
var int[] cpi_dates = 
  array.from(
   timestamp("13 Jan 2021 9:30:00 EST"),
   timestamp("10 Feb 2021 9:30:00 EST"),
   timestamp("10 Mar 2021 9:30:00 EST"),
   timestamp("13 Apr 2021 8:30:00 EST"),
   timestamp("12 May 2021 8:30:00 EST"),
   timestamp("10 Jun 2021 8:30:00 EST"),
   timestamp("13 Jul 2021 8:30:00 EST"),
   timestamp("11 Aug 2021 8:30:00 EST"),
   timestamp("14 Sep 2021 8:30:00 EST"),
   timestamp("13 Oct 2021 8:30:00 EST"),
   timestamp("10 Nov 2021 9:30:00 EST"),
   timestamp("10 Dec 2021 9:30:00 EST"),
   timestamp("12 Jan 2022 9:30:00 EST"),
   timestamp("10 Feb 2022 9:30:00 EST"),
   timestamp("10 Mar 2022 9:30:00 EST"),
   timestamp("12 Apr 2022 8:30:00 EST"),
   timestamp("11 May 2022 8:30:00 EST"),
   timestamp("10 Jun 2022 8:30:00 EST"),
   timestamp("13 Jul 2022 8:30:00 EST"),
   timestamp("10 Aug 2022 8:30:00 EST"),
   timestamp("13 Sep 2022 8:30:00 EST"),
   timestamp("13 Oct 2022 8:30:00 EST"),
   timestamp("10 Nov 2022 8:30:00 EST"),
   timestamp("13 Dec 2022 8:30:00 EST")   
  )

// FOMC Press Conference
var fomc_announcement_date = 0
var int[] fomc_announcement_dates = 
  array.from(
   timestamp("27 Jan 2021 14:00:00 EST"),
   timestamp("17 Mar 2021 14:00:00 EDT"),
   timestamp("28 Apr 2021 14:00:00 EDT"),
   timestamp("16 Jun 2021 14:00:00 EDT"),
   timestamp("28 Jul 2021 14:00:00 EDT"),
   timestamp("22 Sep 2021 14:00:00 EDT"),
   timestamp("3 Nov 2021 14:00:00 EDT"),
   timestamp("15 Dec 2021 14:00:00 EDT"),
   timestamp("26 Jan 2022 14:00:00 EDT"),
   timestamp("16 Mar 2022 14:00:00 EDT"),
   timestamp("4 May 2022 14:00:00 EDT"),
   timestamp("15 Jun 2022 14:00:00 EDT"),
   timestamp("27 Jul 2022 14:00:00 EDT"),
   timestamp("21 Sep 2022 14:00:00 EDT"),
   timestamp("2 Nov 2022 14:00:00 EDT"),
   timestamp("14 Dec 2022 14:00:00 EST"),
   timestamp("1 Feb 2023 14:00:00 EST"),
   timestamp("22 March 2023 14:00:00 EDT"),
   timestamp("3 May 2023 14:00:00 EDT"),
   timestamp("14 June 2023 14:00:00 EDT"),
   timestamp("26 July 2023 14:00:00 EDT"),
   timestamp("20 Sept 2023 14:00:00 EDT"),
   timestamp("1 Nov 2023 14:00:00 EDT"),
   timestamp("13 Dec 2023 14:00:00 EST")   
   )

getUnixTime(_eventArr, _index) => 
    switch 
        timeframe.isdaily => array.get(_eventArr, _index) - timeframe.multiplier*86400000 // -n day(s)
        timeframe.isweekly => array.get(_eventArr, _index) - timeframe.multiplier*604800000 // -n week(s)
        timeframe.ismonthly => array.get(_eventArr, _index) - timeframe.multiplier*2592000000 // -n month(s)
        timeframe.isminutes and timeframe.multiplier > 59 => array.get(_eventArr, _index) - timeframe.multiplier*60000 // -n minute(s)
        => array.get(_eventArr, _index)

// Process and draw the dates
if barstate.islastconfirmedhistory
    if show_fomc_minutes
        i = 0
        while i < array.size(fomc_minutes_dates)
            fomc_minutes_date := getUnixTime(fomc_minutes_dates, i)
            line.new(x1=fomc_minutes_date, y1=high, x2=fomc_minutes_date, y2=low, extend=extend.both, color=color_fomc_minutes, width=1, xloc=xloc.bar_time)
            label.new(fomc_minutes_date,close+ler ,text = "F\nO\nM\nC\n\nM",xloc=xloc.bar_time, size= textSize, color=LB_c, textcolor = tx_c)
            i += 1

    if show_cpi            
        x = 0
        while x < array.size(cpi_dates)
            cpi_date := getUnixTime(cpi_dates, x)
            line.new(x1=cpi_date, y1=high, x2=cpi_date, y2=low, extend=extend.both, color=color_cpi, width=1, xloc=xloc.bar_time)
            label.new(cpi_date,close+ler ,text = "C\nP\nI",xloc=xloc.bar_time, size= textSize, color=LB_c, textcolor = tx_c)
             
            x += 1
            
    if show_fomc_announcement
        y = 0
        while y < array.size(fomc_announcement_dates)
            fomc_announcement_date := getUnixTime(fomc_announcement_dates, y)
            line.new(x1=fomc_announcement_date, y1=high, x2=fomc_announcement_date, y2=low, extend=extend.both, color=color_fomc_announcement, width=1, xloc=xloc.bar_time)
            label.new(fomc_announcement_date,close+ler ,text = "F\nO\nM\nC\n\nP",xloc=xloc.bar_time, size= textSize, color=LB_c, textcolor = tx_c)
            y += 1