//@version =5
indicator("Auto Custom Anchored Trendlines", overlay = true)

leftbars  = input.int(defval = 20, title = "Left Bars", minval = 1, tooltip="More bars left of the pivot means it came from a longer trend")
rightbars  = input.int(defval = 20, title = "Right Bars", minval = 1, tooltip="More bars right of the pivot means it went into a longer trend")
line_c = input.color(color.new(#19232c, 34),  'Line Color', group = "Color Settings")
inp_line_style_TR = input.string("Solid", options = ["Dotted", "Solid", "Dashed"], title = "Line Style", group = "Element On/Off")
Line_st_TR = inp_line_style_TR  == "Solid" ? line.style_solid : inp_line_style_TR  == "Dotted" ? line.style_dotted : inp_line_style_TR  == "Dashed" ? line.style_dashed : na
TR = input.string("Yearly", options = ["Yearly", "Quarterly", "Custom Anchor"], title = "Anchor Time", group = "Element On/Off")
st_TR = TR  == "Yearly" ? "12M" : TR  == "Quarterly" ? "3M" : na

[yo,yotime] = request.security(syminfo.tickerid, st_TR, expression=[open,time], lookahead=barmerge.lookahead_on)
priceA = yo
timeA  = yotime

priceA2 = input.price(100, inline="Custom Main Anchor", confirm=true)
timeA2  = input.time(timestamp("2022-02-20"), inline="Custom Main Anchor", confirm=true)

Choose_custom_price          = TR  == "Custom Anchor" ? priceA2 : priceA
Choose_custom_time           = TR  == "Custom Anchor" ? timeA2 : timeA

var line[] lines = array.new_line()

ph = ta.pivothigh(high, leftbars, rightbars)
pl = ta.pivotlow(low, leftbars, rightbars)

plotchar(ph, title='Highs', char='●', location=location.absolute, color=line_c, offset=-rightbars, size=size.tiny)
plotchar(pl, title='Lows', char='●', location=location.absolute, color=line_c, offset=-rightbars, size=size.tiny)

secondsPerBar=time[0]-time[1] 

if (time[20] > Choose_custom_time and ph)
    //label.new(time[20], high, text=str.tostring(high), xloc = xloc.bar_time)
    anchorline = line.new(Choose_custom_time,Choose_custom_price,time[rightbars],ph, xloc = xloc.bar_time,color=line_c,style=Line_st_TR,extend=extend.right)
    lines.push(anchorline)
if (time[20] > Choose_custom_time and pl)
    //label.new(time[20], high, text=str.tostring(high), xloc = xloc.bar_time)
    anchorline = line.new(Choose_custom_time,Choose_custom_price,time[rightbars],pl, xloc = xloc.bar_time,color=line_c,style=Line_st_TR,extend=extend.right)
    lines.push(anchorline)
   
// for d = array.size(heat)-1 to 0
//     if (array.size(heat) != 0)
//         del = array.remove(heat, d) 
//         box.delete(del)