// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © Jo-Pippin

//@version=5
indicator("Yearly to yearly", overlay = true, max_bars_back = 500)

Shifta                       = input.float(0.0007, title ="Label Shift up", group = "Global Settings")
line_c                       = input.color(color.new(#afcff7, 80),  'Line Color', group = "Color Settings")
tx_c                         = input.color(color.new(#afcff7, 0),  'Text Color', group = "Color Settings")
zone_c                       = input.color(color.new(#afcff7, 10),  'Yearly Line Color', group = "Color Settings")
h_c                          = input.color(color.new(#afcff7, 20),  'Halving vert Line Color', group = "Color Settings")
h_c2                          = input.color(color.new(#afcff7, 20),  'Halving Line Color', group = "Color Settings")
i_open_c                     = input.color(color.new(#f3f6fa, 12),  'Yearly Marker Color', group = "Color Settings")
inp_line_style_TR            = input.string("Dashed", options = ["Dotted", "Solid", "Dashed"], title = "yearly Line Style", group = "Global Settings")
Line_st_TR                   = inp_line_style_TR  == "Solid" ? line.style_solid : inp_line_style_TR  == "Dotted" ? line.style_dotted : inp_line_style_TR  == "Dashed" ? line.style_dashed : na
inp_line_style_TR1            = input.string("Solid", options = ["Dotted", "Solid", "Dashed"], title = "Channels Line Style", group = "Global Settings")
Line_st_TR1                   = inp_line_style_TR1  == "Solid" ? line.style_solid : inp_line_style_TR1  == "Dotted" ? line.style_dotted : inp_line_style_TR1  == "Dashed" ? line.style_dashed : na
inp_line_style_TR3            = input.string("Dashed", options = ["Dotted", "Solid", "Dashed"], title = "Halving Line Style", group = "Global Settings")
Line_st_TR3                   = inp_line_style_TR3  == "Solid" ? line.style_solid : inp_line_style_TR3  == "Dotted" ? line.style_dotted : inp_line_style_TR3  == "Dashed" ? line.style_dashed : na

show_yearly                  = input.bool(true, 'Show Yearly Markers', group = "Element On/Off")
show_Line_1                  = input.bool(false, 'Show Line 2022 - 2023', group = "Lines")
show_Line_2                  = input.bool(false, 'Show Line 2021 - 2022', group = "Lines")
show_Line_3                  = input.bool(false, 'Show Line 2020 - 2021', group = "Lines")
show_Line_4                  = input.bool(false, 'Show Line 2019 - 2020', group = "Lines")
show_Line_5                  = input.bool(false, 'Show Line 2018 - 2019', group = "Lines")
show_Line_6                  = input.bool(false, 'Show Line 2017 - 2018', group = "Lines")
show_Line_7                  = input.bool(false, 'Show Line 2016 - 2017', group = "Lines")
show_Line_8                  = input.bool(false, 'Show Line 2015 - 2016', group = "Lines")
show_Line_9                  = input.bool(false, 'Show Line 2014 - 2015', group = "Lines")
show_Line_10                 = input.bool(false, 'Show Line 2013 - 2013', group = "Lines")
show_Line_11                 = input.bool(false, 'Show Line 2012 - 2013', group = "Lines")
show_Line_12                 = input.bool(false, 'Show Line 2011 - 2012', group = "Lines")
show_halving_1               = input.bool(false, 'Show Halving line 1-2', group = "Lines")
show_halving_2               = input.bool(false, 'Show Halving line 2-3', group = "Lines")
show_halving_3               = input.bool(true, 'Show Halving line 1-3', group = "Lines")
show_halving_lab             = input.bool(false, 'Show Halving labels', group = "Lines")
show_hor_hal                 = input.bool(false, 'Show Halving Horizontals', group = "Lines")
show_yearly_H_chan           = input.bool(false, 'Show yearly channel 1', group = "Lines")
show_yearly_H1_chan          = input.bool(false, 'Show yearly channel 2', group = "Lines")
show_half13_chan             = input.bool(true, 'Show Halving channels halving 1 to 3 connected', group = "Lines")
peak12a                      = input.bool(true, 'Show conected apex 2011 - 2013', group = "Lines")
peak12                       = input.bool(true, 'Show conected apex 2013 - 2017', group = "Lines")
peak23                       = input.bool(true, 'Show conected apex 2017 - 2021', group = "Lines")
peak34                       = input.bool(true, 'Show conected apex 2021 - 2021', group = "Lines")

[high_,yc1,open_,open1_,open2_,open3_,open4_,open5_,open6_,open7_,open8_,open9_,open10_,open11_,open12_,opent_,opent1_,opent2_,opent3_,opent4_,opent5_,opent6_,opent7_,opent8_,opent9_,opent10_,opent11_,opent12_] = request.security(syminfo.tickerid, "12M", expression=
 [high[1],close[1],open,open[1],open[2],open[3],open[4],open[5],open[6],open[7],open[8],open[9],open[10],open[11],open[12],time,time[1],time[2],time[3],time[4],time[5],time[6],time[7],time[8],time[9],time[10],time[11],time[12]], lookahead=barmerge.lookahead_on)

yearly_open_bar                 = ta.barssince(ta.change(time("24M")))
yearly_open_bar2                 = ta.barssince(open1_)
yearly_low_bar                  = ta.barssince(ta.pivotlow(yearly_open_bar,0))
yearly_high_bar                 = ta.barssince(ta.pivothigh(yearly_open_bar,0))

//Yearly Open Dots
new_day1      = yc1[1]  != yc1
plotchar(new_day1 and show_yearly ? open_ : na, title='Close', char='◎', location=location.absolute, color=i_open_c, offset=0, size=size.tiny)

first_halving_date   = timestamp("29 Nov 2012 00:00")
second_halving_date  = timestamp("10 Jul 2016 00:00")
thurd_halving_date   = timestamp("13 May 2020 00:00")
pyod                 = timestamp("1 Jan 2022 00:00")

peak_1a              = timestamp("8 Jun 2011 00:00")
peak_1               = timestamp("29 Nov 2013 00:00")
peak_2               = timestamp("17 Dec 2017 00:00")
peak_3               = timestamp("14 Apr 2021 00:00")
peak_4               = timestamp("10 Nov 2021 00:00")

bartime              = int(ta.change(time))

bar_1st_halving      = (math.floor((timenow - first_halving_date) / bartime)) 
bar_2st_halving      = (math.floor((timenow - second_halving_date) / bartime)) 
bar_3st_halving      = (math.floor((timenow - thurd_halving_date) / bartime)) 
prev_yopen           = (math.floor((timenow - pyod) / bartime)) 

bar_1ast_peak        = (math.floor((timenow - peak_1a) / bartime)) 
bar_1st_peak         = (math.floor((timenow - peak_1) / bartime)) 
bar_2st_peak         = (math.floor((timenow - peak_2) / bartime))
bar_3st_peak         = (math.floor((timenow - peak_3) / bartime))
bar_4st_peak         = (math.floor((timenow - peak_4) / bartime))

if barstate.islast
    secondsPerBar=time[0]-time[1] 
    apex01  = peak12a ? line.new(peak_1a,high[bar_1ast_peak]+0.000000227,peak_1,high[bar_1st_peak], xloc = xloc.bar_time,color=line_c,style=Line_st_TR1,width = 1,extend = extend.both ):na
    apex02  = peak12  ? line.new(peak_1,high[bar_1st_peak],peak_2,high[bar_2st_peak], xloc = xloc.bar_time,color=line_c,style=Line_st_TR1,width = 1,extend = extend.both ):na
    apex03  = peak23  ? line.new(peak_2,high[bar_2st_peak],peak_3,high[bar_3st_peak], xloc = xloc.bar_time,color=line_c,style=Line_st_TR1,width = 1,extend = extend.both ):na
    apex04  = peak34  ? line.new(peak_3,high[bar_3st_peak],peak_4,high[bar_4st_peak], xloc = xloc.bar_time,color=line_c,style=Line_st_TR1,width = 1,extend = extend.both ):na

transp_ = color.new(color.green,100)

label_first_halving = show_halving_lab ? label.new(first_halving_date, open[bar_1st_halving]+Shifta, "1st Halving", xloc=xloc.bar_time,color=transp_, textcolor = tx_c  , size = size.tiny,style=label.style_label_down):na
label.delete(label_first_halving[1])
label_second_halving = show_halving_lab ? label.new(second_halving_date, open[bar_2st_halving]+Shifta, "2nd Halving", xloc=xloc.bar_time,color=transp_, textcolor = tx_c  , size = size.tiny,style=label.style_label_down):na
label.delete(label_second_halving[1])
label_thurd_halving =  show_halving_lab? label.new(thurd_halving_date, open[bar_3st_halving]+Shifta, "3rd Halving", xloc=xloc.bar_time,color=transp_, textcolor = tx_c  , size = size.tiny,style=label.style_label_down):na
label.delete(label_thurd_halving[1])


if barstate.islast
    secondsPerBar=time[0]-time[1] 
    line1st_halvingh = show_hor_hal ? line.new(bar_index,open[bar_1st_halving],first_halving_date,open[bar_1st_halving], xloc = xloc.bar_time,color=h_c,style=line.style_solid,width = 1, extend = extend.right):na
    line2st_halvingh = show_hor_hal ? line.new(bar_index,open[bar_2st_halving],second_halving_date ,open[bar_2st_halving], xloc = xloc.bar_time,color=h_c,style=line.style_solid,width = 1, extend = extend.right):na
    line3st_halvingh = show_hor_hal ? line.new(bar_index,open[bar_3st_halving],thurd_halving_date ,open[bar_3st_halving], xloc = xloc.bar_time,color=h_c,style=line.style_solid,width = 1, extend = extend.right):na

if barstate.islast
    secondsPerBar=time[0]-time[1] 
    line1st_halvingex = show_halving_lab ? line.new(first_halving_date,open[bar_1st_halving],first_halving_date ,open[bar_1st_halving]+Shifta, xloc = xloc.bar_time,color=h_c,style=line.style_solid,width = 1):na
    line2st_halvingex = show_halving_lab ? line.new(second_halving_date,open[bar_2st_halving],second_halving_date ,open[bar_2st_halving]+Shifta, xloc = xloc.bar_time,color=h_c,style=line.style_solid,width = 1):na
    line3st_halvingex = show_halving_lab ? line.new(thurd_halving_date,open[bar_3st_halving],thurd_halving_date ,open[bar_3st_halving]+Shifta, xloc = xloc.bar_time,color=h_c,style=line.style_solid,width = 1):na
    
if barstate.islast
    secondsPerBar=time[0]-time[1] 
    line1st_halving = show_halving_1 ? line.new(first_halving_date,open[bar_1st_halving],second_halving_date,open[bar_2st_halving], xloc = xloc.bar_time,color=h_c2,style=Line_st_TR3,width = 1):na
    line2st_halving = show_halving_2 ? line.new(second_halving_date,open[bar_2st_halving],thurd_halving_date,open[bar_3st_halving], xloc = xloc.bar_time,color=h_c2,style=Line_st_TR3,width = 1):na
    line2st_halvina = show_halving_2 ? line.new(second_halving_date,open[bar_2st_halving],thurd_halving_date,open[bar_3st_halving], xloc = xloc.bar_time,color=line_c,style=Line_st_TR1,width = 1,extend = extend.both ):na
    line3st_halving = show_halving_3 ? line.new(first_halving_date,open[bar_1st_halving],thurd_halving_date,open[bar_3st_halving], xloc = xloc.bar_time,color=h_c2,style=Line_st_TR3,width = 1):na

if barstate.islast
    secondsPerBar=time[0]-time[1]    

    line1     = show_Line_1  ? line.new(opent1_,open1_,opent_,open_,       xloc = xloc.bar_time,color=zone_c,style=Line_st_TR,width = 1):na
    linec1b   = show_Line_1 ? line.new(opent1_,open1_+0.0000   ,opent_,open_+0.0000,       xloc = xloc.bar_time,color=line_c,style=Line_st_TR1,width = 1,extend = extend.both ):na
    line2     = show_Line_2  ? line.new(opent2_,open2_,opent1_,open1_,     xloc = xloc.bar_time,color=zone_c,style=Line_st_TR,width = 1):na
    linec14   = show_Line_2 ? line.new(opent2_,open2_-0.0000  ,opent1_,open1_-0.0000,     xloc = xloc.bar_time,color=line_c,style=Line_st_TR1,width = 1,extend = extend.both ):na
    line3     = show_Line_3  ? line.new(opent3_,open3_,opent2_,open2_,     xloc = xloc.bar_time,color=zone_c,style=Line_st_TR,width = 1):na
    line3a    = show_Line_3  ? line.new(opent3_,open3_,opent2_,open2_,     xloc = xloc.bar_time,color=line_c,style=Line_st_TR1,width = 1,extend = extend.both ):na
    line4     = show_Line_4  ? line.new(opent4_,open4_,opent3_,open3_,     xloc = xloc.bar_time,color=zone_c,style=Line_st_TR,width = 1):na
    line5     = show_Line_5  ? line.new(opent5_,open5_,opent4_,open4_,     xloc = xloc.bar_time,color=zone_c,style=Line_st_TR,width = 1):na
    line6     = show_Line_6  ? line.new(opent6_,open6_,opent5_,open5_,     xloc = xloc.bar_time,color=zone_c,style=Line_st_TR,width = 1):na
    line7     = show_Line_7  ? line.new(opent7_,open7_,opent6_,open6_,     xloc = xloc.bar_time,color=zone_c,style=Line_st_TR,width = 1):na
    line8     = show_Line_8  ? line.new(opent8_,open8_,opent7_,open7_,     xloc = xloc.bar_time,color=zone_c,style=Line_st_TR,width = 1):na
    line9     = show_Line_9  ? line.new(opent9_,open9_,opent8_,open8_,     xloc = xloc.bar_time,color=zone_c,style=Line_st_TR,width = 1):na
    line10    = show_Line_10 ? line.new(opent10_,open10_,opent9_,open9_,   xloc = xloc.bar_time,color=zone_c,style=Line_st_TR,width = 1):na
    line11    = show_Line_11 ? line.new(opent11_,open11_,opent10_,open10_, xloc = xloc.bar_time,color=zone_c,style=Line_st_TR,width = 1):na
    line12    = show_Line_12 ? line.new(opent12_,open12_,opent11_,open11_, xloc = xloc.bar_time,color=zone_c,style=Line_st_TR,width = 1):na

    linec1a   = show_yearly_H_chan ? line.new(opent1_,open1_+0.000149 ,opent_,open_+0.000149,     xloc = xloc.bar_time,color=line_c,style=Line_st_TR1,width = 1,extend = extend.both ):na
    linec1c   = show_yearly_H_chan ? line.new(opent1_,open1_+0.0000553,opent_,open_+0.0000553,    xloc = xloc.bar_time,color=line_c,style=Line_st_TR1,width = 1,extend = extend.both ):na
    linec1d   = show_yearly_H_chan ? line.new(opent1_,open1_-0.000026 ,opent_,open_-0.000026,     xloc = xloc.bar_time,color=line_c,style=Line_st_TR1,width = 1,extend = extend.both ):na
    linec1    = show_yearly_H_chan ? line.new(opent1_,open1_+0.00009  ,opent_,open_+0.00009,      xloc = xloc.bar_time,color=line_c,style=Line_st_TR1,width = 1,extend = extend.both ):na
    linec2    = show_yearly_H_chan ? line.new(opent1_,open1_+0.000185 ,opent_,open_+0.000185,     xloc = xloc.bar_time,color=line_c,style=Line_st_TR1,width = 1,extend = extend.both ):na

    linec3a   = show_yearly_H1_chan ? line.new(opent2_,open2_+0.000123,opent1_,open1_+0.000123,   xloc = xloc.bar_time,color=line_c,style=Line_st_TR1,width = 1,extend = extend.both ):na
    linec3    = show_yearly_H1_chan ? line.new(opent2_,open2_-0.000145,opent1_,open1_-0.000145,   xloc = xloc.bar_time,color=line_c,style=Line_st_TR1,width = 1,extend = extend.both ):na
    linec4    = show_yearly_H1_chan ? line.new(opent2_,open2_-0.00002 ,opent1_,open1_-0.00002,    xloc = xloc.bar_time,color=line_c,style=Line_st_TR1,width = 1,extend = extend.both ):na
    linec5    = show_yearly_H1_chan ? line.new(opent2_,open2_-0.000211,opent1_,open1_-0.000211,   xloc = xloc.bar_time,color=line_c,style=Line_st_TR1,width = 1,extend = extend.both ):na
    linec6    = show_yearly_H1_chan ? line.new(opent2_,open2_-0.000247,opent1_,open1_-0.000247,   xloc = xloc.bar_time,color=line_c,style=Line_st_TR1,width = 1,extend = extend.both ):na
    linec7    = show_yearly_H1_chan ? line.new(opent2_,open2_-0.000316,opent1_,open1_-0.000316,   xloc = xloc.bar_time,color=line_c,style=Line_st_TR1,width = 1,extend = extend.both ):na
    linec8    = show_yearly_H1_chan ? line.new(opent2_,open2_-0.000356,opent1_,open1_-0.000356,   xloc = xloc.bar_time,color=line_c,style=Line_st_TR1,width = 1,extend = extend.both ):na
    linec9    = show_yearly_H1_chan ? line.new(opent2_,open2_-0.000365,opent1_,open1_-0.000365,   xloc = xloc.bar_time,color=line_c,style=Line_st_TR1,width = 1,extend = extend.both ):na
    linec10   = show_yearly_H1_chan ? line.new(opent2_,open2_-0.000394,opent1_,open1_-0.000394,   xloc = xloc.bar_time,color=line_c,style=Line_st_TR1,width = 1,extend = extend.both ):na
    linec11   = show_yearly_H1_chan ? line.new(opent2_,open2_-0.000415,opent1_,open1_-0.000415,   xloc = xloc.bar_time,color=line_c,style=Line_st_TR1,width = 1,extend = extend.both ):na
    linec12   = show_yearly_H1_chan ? line.new(opent2_,open2_-0.000444,opent1_,open1_-0.000444,   xloc = xloc.bar_time,color=line_c,style=Line_st_TR1,width = 1,extend = extend.both ):na
    linec13   = show_yearly_H1_chan ? line.new(opent2_,open2_-0.00047 ,opent1_,open1_-0.00047,    xloc = xloc.bar_time,color=line_c,style=Line_st_TR1,width = 1,extend = extend.both ):na
    linec15   = show_yearly_H1_chan ? line.new(opent2_,open2_+0.000243,opent1_,open1_+0.000243,   xloc = xloc.bar_time,color=line_c,style=Line_st_TR1,width = 1,extend = extend.both ):na
    linec16   = show_yearly_H1_chan ? line.new(opent2_,open2_+0.00031 ,opent1_,open1_+0.00031,    xloc = xloc.bar_time,color=line_c,style=Line_st_TR1,width = 1,extend = extend.both ):na

    linec17 = show_half13_chan ? line.new(first_halving_date,open[bar_1st_halving]+0.0000,        thurd_halving_date,open[bar_3st_halving]+0.0000,    xloc = xloc.bar_time,color=line_c,style=Line_st_TR1,width = 1,extend = extend.both ):na
    linec18 = show_half13_chan ? line.new(first_halving_date,open[bar_1st_halving]+0.000137,      thurd_halving_date,open[bar_3st_halving]+0.000137,  xloc = xloc.bar_time,color=line_c,style=Line_st_TR1,width = 1,extend = extend.both ):na
    linec19 = show_half13_chan ? line.new(first_halving_date,open[bar_1st_halving]+0.0001115,     thurd_halving_date,open[bar_3st_halving]+0.0001115, xloc = xloc.bar_time,color=line_c,style=Line_st_TR1,width = 1,extend = extend.both ):na
    linec20 = show_half13_chan ? line.new(first_halving_date,open[bar_1st_halving]+0.00006,       thurd_halving_date,open[bar_3st_halving]+0.00006,   xloc = xloc.bar_time,color=line_c,style=Line_st_TR1,width = 1,extend = extend.both ):na
    linec21 = show_half13_chan ? line.new(first_halving_date,open[bar_1st_halving]+0.0000625,     thurd_halving_date,open[bar_3st_halving]+0.0000625, xloc = xloc.bar_time,color=line_c,style=Line_st_TR1,width = 1,extend = extend.both ):na