// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © Jo-Pippin

//@version=5
indicator("Yearly/Quarterly Anchored", overlay = true)

line_c                       = input.color(color.new(#19232c, 34),  'Line Color', group = "Color Settings")
i_open_c                     = input.color(color.new(#036df8, 1),  'Yearly Marker Color', group = "Color Settings")
inp_line_style_TR            = input.string("Solid", options = ["Dotted", "Solid", "Dashed"], title = "Line Style", group = "Element On/Off")
Line_st_TR                   = inp_line_style_TR  == "Solid" ? line.style_solid : inp_line_style_TR  == "Dotted" ? line.style_dotted : inp_line_style_TR  == "Dashed" ? line.style_dashed : na
TR                           = input.string("Yearly", options = ["Yearly", "Quarterly", "Custom Anchor"], title = "Anchor Time", group = "Element On/Off")
st_TR                        = TR  == "Yearly" ? "12M" : TR  == "Quarterly" ? "3M" : na

show_yearly                  = input.bool(true, 'Show Yearly Markers', group = "Element On/Off")
show_Line_B                  = input.bool(true, 'Show Line B', group = "Lines")
show_Line_C                  = input.bool(true, 'Show Line C', group = "Lines")
show_Line_D                  = input.bool(true, 'Show Line D', group = "Lines")
show_Line_E                  = input.bool(true, 'Show Line E', group = "Lines")
show_Line_F                  = input.bool(true, 'Show Line F', group = "Lines")
show_Line_G                  = input.bool(true, 'Show Line G', group = "Lines")
show_Line_H                  = input.bool(true, 'Show Line H', group = "Lines")

[yo,yotime] = request.security(syminfo.tickerid, st_TR, expression=[open,time], lookahead=barmerge.lookahead_on)
priceA = yo
timeA  = yotime

priceA2 = input.price(100, inline="Custom Main Anchor", confirm=true)
timeA2  = input.time(timestamp("2022-02-20"), inline="Custom Main Anchor", confirm=true)

Choose_custom_price          = TR  == "Custom Anchor" ? priceA2 : priceA
Choose_custom_time           = TR  == "Custom Anchor" ? timeA2 : timeA

priceB = input.price(100, inline="PointB", confirm=true)
timeB  = input.time(timestamp("2022-02-20"), inline="PointB", confirm=true)

priceC = input.price(100, inline="PointC", confirm=true)
timeC  = input.time(timestamp("2022-02-20"), inline="PointC", confirm=true)

priceD = input.price(100, inline="PointD", confirm=true)
timeD  = input.time(timestamp("2022-02-20"), inline="PointD", confirm=true)

priceE = input.price(100, inline="PointE", confirm=true)
timeE  = input.time(timestamp("2022-02-20"), inline="PointE", confirm=true)

priceF = input.price(100, inline="PointF", confirm=true)
timeF  = input.time(timestamp("2022-02-20"), inline="PointF", confirm=true)

priceG = input.price(100, inline="PointG", confirm=true)
timeG  = input.time(timestamp("2022-02-20"), inline="PointG", confirm=true)

priceH = input.price(100, inline="PointH", confirm=true)
timeH  = input.time(timestamp("2022-02-20"), inline="PointH", confirm=true)


hideB  = timeB < Choose_custom_time ? false :true
hideC  = timeC < Choose_custom_time ? false :true
hideD  = timeD < Choose_custom_time ? false :true
hideE  = timeE < Choose_custom_time ? false :true
hideF  = timeF < Choose_custom_time ? false :true
hideG  = timeG < Choose_custom_time ? false :true
hideH  = timeH < Choose_custom_time ? false :true

if barstate.islast
    secondsPerBar=time[0]-time[1]    
    lineB = hideB and show_Line_B ? line.new(Choose_custom_time,Choose_custom_price,timeB,priceB, xloc = xloc.bar_time,color=line_c,style=Line_st_TR,extend=extend.right):na
    lineC = hideC and show_Line_C ? line.new(Choose_custom_time,Choose_custom_price,timeC,priceC, xloc = xloc.bar_time,color=line_c,style=Line_st_TR,extend=extend.right):na
    lineD = hideD and show_Line_D ? line.new(Choose_custom_time,Choose_custom_price,timeD,priceD, xloc = xloc.bar_time,color=line_c,style=Line_st_TR,extend=extend.right):na
    lineE = hideE and show_Line_E ? line.new(Choose_custom_time,Choose_custom_price,timeE,priceE, xloc = xloc.bar_time,color=line_c,style=Line_st_TR,extend=extend.right):na
    lineF = hideF and show_Line_F ? line.new(Choose_custom_time,Choose_custom_price,timeF,priceF, xloc = xloc.bar_time,color=line_c,style=Line_st_TR,extend=extend.right):na
    lineG = hideG and show_Line_G ? line.new(Choose_custom_time,Choose_custom_price,timeG,priceG, xloc = xloc.bar_time,color=line_c,style=Line_st_TR,extend=extend.right):na
    lineH = hideH and show_Line_H ? line.new(Choose_custom_time,Choose_custom_price,timeH,priceH, xloc = xloc.bar_time,color=line_c,style=Line_st_TR,extend=extend.right):na

//Yearly Open Dots
[yoa,yc1]      = request.security(syminfo.tickerid, "12M", expression=[open, close[1]], lookahead=barmerge.lookahead_on)
new_day1       = yc1[1]  != yc1
plotchar(new_day1 and show_yearly ? yoa : na, title='Close', char='●', location=location.absolute, color=i_open_c, offset=0, size=size.tiny)